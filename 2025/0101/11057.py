import sys
sys.stdin = open('input_11057.txt')
from pprint import pprint

# 오르막 수는 수의 자리가 오름차순을 이루는 수를 말한다. 이때, 인접한 수가 같아도 오름차순으로 친다.
# 예를 들어, 2234와 3678, 11119는 오르막 수이지만, 2232, 3676, 91111은 오르막 수가 아니다.
# 수의 길이 N이 주어졌을 때, 오르막 수의 개수를 구하는 프로그램을 작성하시오. 수는 0으로 시작할 수 있다.

n = int(input())
# n = 1 -> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
# n = 2 -> 위에 있는거 앞에 0 ~ 해당 숫자까지의 수 붙이기. 0은 0 하나만, 9는 0부터 9까지 10개. 즉 1 ~ 10까지 더한게 n이 2일때의 값
# n = 3 -> 위에 있는거 앞에 0 ~ 해당 숫자까지의 수 붙이기. 0은 0 하나만, 9는 0부터 9까지 10개.

# 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
# 00, 01, 02, 03, 04, 05, 06, 07, 08, 09 -> 이 10개에 대해서 개당 1개씩 들어감, 10 * 1
# 11, 12, 13, 14, 15, 16, 17, 18, 19 -> 이 9개에 대해서 개당 2개씩 들어감, 9 * 2
# 22, 23, 24, 25, 26, 27, 28, 29 -> 이 8개에 대해서 개당 3개씩 들어감, 8 * 3
# 33, 34, 35, 36, 37, 38, 39 -> 7 * 4
# 44, 45, 46, 47, 48, 49 -> 6 * 5
# 55, 56, 57, 58, 59 -> 5 * 6
# 66, 67, 68, 69 -> 4 * 7
# 77, 78, 79 -> 3 * 8
# 88, 89 -> 2 * 9
# 99 -> 10 * 1
# -> 10 + 18 + 24 + 28 + 30 + 30 + 28 + 24 + 18 + 10 -> 220
# 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
# 1+1*0, 1+1*1, 1+1*2, ... , 1+1*9

# [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
dp = [[0] * 10 for _ in range(n)]
for i in range(10):
    dp[0][i] = 1

# dp 로직
# dp[i][j] -> i자릿수를 가진 수 중 첫 자리가 j인 오르막수의 개수
# dp[i + 1][0]의 값은 sum(dp[i])과 같음. 이유: i-1자릿수로 만들어진 오르막수 앞에 0만 붙이면 되기 때문
# dp[i + 1][1]의 값은 sum(dp[i]) 값에서 dp[i][0] 값을 빼주면 됨

for i in range(1, n):
    dp[i][0] = sum(dp[i - 1])
    for j in range(1, 10):
        dp[i][j] = dp[i][j - 1] - dp[i - 1][j - 1]

print(sum(dp[n - 1])%10007)