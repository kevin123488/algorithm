import sys
sys.stdin = open('input10844.txt')
input = sys.stdin.readline

n = int(input())
# 계단 수: 인접한 모든 자리의 차이가 1인 수
# 0으로 시작하는 수는 계단수가 아님
# n이 주어질 때, 길이가 n인 계단 수는 총 몇 개가 있는지 구하자.

# 이전 값 * 2에서 이전 값 중 0이나 9로 끝나는 값의 수 만큼 빼줘야 함
# 0이나 9로 끝나는 수를 만들기 위한 조건은? -> 이전 단계에서 1로 끝나거나 8로 끝나야 함.
# 전전 단계의 1이나 8로 끝나는 수를 저장해두거나, 전 단계의 0이나 9로 끝나는 수를 저장해 두어야 함
# 전전 단계에서 1이나 8로 끝나기 위해선, 전전전 단계에서 0이나 2, 7이나 9로 끝나야 한다.
# n = 1일때 빼줘야 하는 값은 1
# n = 2일때 빼줘야 하는 값은 2
# n = 3일때 빼줘야 하는 값은 3
# n = 4일때 빼줘야 하는 값은

# 1자리일 때 -> 올 수 있는 가짓수는 9
# 2자리일 때 -> 첫 자리 -> 9, 둘째 자리 -> 9 * 2에서 끝자리 9일때를 뺀 9 * 2 - 1
# 3자리일 때 -> 둘째 자리 -> 17, 셋째 자리 -> 17 * 2에서 끝자리 0일때와 9일때를 뺀 17 * 2 - 2
# 4자리일 때 -> 셋째 자리 -> 32, 넷째 자리 -> 32 * 2에서 끝자리 0일때와 9일때를 뺀 32 * 2 - 3
# 5자리일 때 -> 넷째 자리 -> 61, 다섯째 자리 -> 61 * 2에서 끝자리 0일때와 9일때를 뺀 61 * 2 - 6

dp = [[0] * 10 for _ in range(n+1)] # dp[i][j]의 값은 i자리 수의 계단수 중 j로 끝나는 수의 개수이다.
for i in range(1, 10):
    dp[1][i] = 1

for i in range(2, n+1): # 2자리의 계단수부터 n자리의 계단수까지
    # dp[i][0] = dp[i-1][1]
    # dp[i][1] = dp[i-1][0] + dp[i-1][2]
    # dp[i][2] = dp[i-1][1] + dp[i-1][3]
    # dp[i][3] = dp[i-1][2] + dp[i-1][4]
    # dp[i][4] = dp[i-1][3] + dp[i-1][5]
    # dp[i][5] = dp[i-1][4] + dp[i-1][6]
    # dp[i][6] = dp[i-1][5] + dp[i-1][7]
    # dp[i][7] = dp[i-1][6] + dp[i-1][8]
    # dp[i][8] = dp[i-1][7] + dp[i-1][9]
    # dp[i][9] = dp[i-1][8]
    for j in range(10):
        if j == 0:
            dp[i][j] = dp[i-1][j+1]
        elif j == 9:
            dp[i][j] = dp[i-1][j-1]
        else:
            dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]

print(sum(dp[n]) % 1000000000)