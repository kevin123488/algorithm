import sys
sys.stdin = open('input12846.txt')
input = sys.stdin.readline

# 각 날마다 일의 차이때문에 급여가 정해져 있다
# 돈은 당일에 주지 않고 퇴직을 할 때 한번에 준다
# 성화는 욕심쟁이라 해당 일을 한 동안 중 가장 일급이 작을 때를 기준으로 급여를 지급한다.
# 일급이 다른 것을 들키지 않기 위하여 한번이라도 퇴직한 자를 다시 취직시키지 않는다.
# 만약 취직을 한다면 일을 시작 한 날부터 끝날 때까지 하루도 빠지면 안된다.
# 준수는 n+1일 후에 001에 월세를 내야 해서 성화가 사장으로 있는 편의점에 취직하려 한다.
# 다행히 주변 퇴직자들의 얘기로 급여에 관련해 파악했다. 또한 퇴직자들의 급여 통계를 통해
# 당장 n일 후까지 일급 정보를 알아냈다. 최대로 많이 일했을 때가 최대 이익이 아닐 수 있다.
# 어제까지 과제를 제출하고 지금도 001에서 자고 있는 준수를 위해 코딩 잘하는 여러분이 일을 해서 벌 수 있는
# 최대 이익을 준수에게 알려주도록 하자.

def find_ans(i):
    ans_list = []
    for j in range(i + 1): # 0부터 i까지
        ans_list.append(min(t[j:i+1]) * (i - j + 1))

    return max(ans_list)

n = int(input()) # 일을 할 수 있는 날의 수
t = list(map(int, input().split())) # 일급의 정보
di = [0] * n
di[0] = t[0]
# 10 20 30 20 10
# 0번째 인덱스일 때 -> 0번째 값이 최대 일급의 합이 된다
# 1번째 인덱스일 때 -> (1번째 값)과 (0번째 ~ 1번째 값 중 가장 적은 값 * 2 한 값)을 비교한 후 더 큰 값이 최대 일급의 합이 된다.
# 2번째 인덱스일 때 -> (2번째 값)과 (0번째 ~ 2번째 값 중 가장 적은 값 * 3 한 값) 그리고 (1번째 ~ 2번째 중 가장 적은 값 * 2 한 값)들을 비교한 후 가장 큰 값이 최대 일급의 합이 된다.

for i in range(n):
    di[i] = find_ans(i)

print(max(di))