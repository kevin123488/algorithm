import sys
sys.stdin = open('11866_input.txt')

def yose(arr, k):
    i = 0
    while len(arr):
        i += (k-1) # 찾아야 하는 인덱스 설정
        i = i % len(arr)
        ansarr.append(arr.pop(i))


# 1번부터 N번까지 N명의 사람이 원을 이루면서 앉아있고, 양의 정수 K가 주어짐.
# 순서대로 K번째 사람을 제거함. 한 사람이 제거되면 남은 사람들로 이루어진 원을 따라 이 과정을 계속해 나감.
# 이 과정은 N명의 사람이 모두 제거될 때까지 계속됨. 원에서 사람들이 제거되는 순서를 (N, K) 요세푸스 순열이라고 함.
# (7, 3) 요세푸스 순열은 <3, 6, 2, 7, 5, 1, 4> 임
# (N, K) 요세푸스 순열을 구하는 프로그램을 작성하자

# K번째 사람을 구하는 방법
N, K = map(int, input().split())
arr = []
for i in range(N):
    arr.append(i+1) # arr에 1부터 N까지의 수를 입력

ansarr = []
yose(arr, K)
print('<', end='')
for i in range(len(ansarr)):
    if i == len(ansarr) - 1:
        print(ansarr[i], end='')
    else:
        print(f'{ansarr[i]}, ', end='')
print('>')
# K번째 수를 ansarr에 집어넣는 함수를 만들어보자
# 남아있는 수가 K 이상이라면, 그냥 배열의 K번째 요소를 빼오면 됨(인덱스 K-1)
# 문제는 남아있는 수가 K보다 작을 때. 만약 남은 수가 2개고 K가 5라면? -> k를 2로 나눈 나머지에 해당하는 번째 수를 빼면 되겠네

# 내가 이해한거랑 문제랑 다른듯?
# (7, 3) 이면 1, 2, 3, 4, 5, 6, 7 에서 3 제거, 4 제거, 5 제거, 6 제거, 7 제거, 1 제거, 2 제거가 맞다고 생각했는데, 3, 6, 2, 7, 5, 1, 4가 맞다고 함
# 1, 2, 3, 4, 5, 6, 7 에서 3이 제거됨 -> 1, 2, 4, 5, 6, 7 -> 4 부터 3번째 요소 고름 -> 6 제거 -> 1, 2, 4, 5, 7 -> 