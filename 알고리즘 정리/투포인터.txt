투포인터: 두 개의 포인터를 활용, 리스트 내에서 원하는 값 혹은 범위를 찾는 알고리즘 (매우 간단)

-10, -6, -4, -3, 0, 2, 3, 7, 9, 10

위와 같이 10개의 수가 있다고 하자.
10개의 수 중 2개의 수를 골라 더한 값의 절댓값이 최소가 되도록 숫자 두개를 골라보자.

방법 1. 완전탐색
이중포문을 활용하여 모든 조합을 생성해보고, 그 중 합의 절댓값이 가장 적은 케이스를 뽑는다.
장점: 생각할 거리가 없음, 구현이 간단함
단점: 시간초과. 사실상 사용되지 않는 방법이라고 보면 됨

방법 2. 투포인터
left_idx와 right_idx를 각각 0, n - 1(n은 수열의 길이)이라고 하자.
만약 left_idx에 해당하는 값과 right_idx에 해당하는 값의 합이 0보다 크다면? -> 절댓값을 줄이기 위한 시도로 right_idx값을 1 감소
만약 0보다 작다면? -> 절댓값을 줄이기 위한 시도로 left_idx값을 1 증가
위와 같은 방법으로 left_idx와 right_idx값을 조절해줘야 함